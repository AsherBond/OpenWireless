#!/usr/bin/env python2.7
import json
import os
import sys

import auth
import common

def jsonrpc_change_password_first_time():
  """Accept a JSONRPC-style change password, with parameters like so:

  {"jsonrpc":"2.0","method":"use.setpassword","params":["username","password"],"id":1}

  This endpoint does not require the user to provide their existing password,
  but it can only be used when setting the administrator password for the first
  time. If a password is already set, this endpoint will return 403.

  This needs to be a separate endpoint from change_password because it is
  listed in auth.py as not requiring authentication cookies.
  """
  data = json.loads(sys.stdin.read())
  try:
    params = data["params"]
    username = params[0]
    new_password = params[1]
  except KeyError, e:
    common.render_error(e.__str__())
  except IndexError, e:
    common.render_error(e.__str__())

  a = auth.Auth()
  if a.password_exists():
    common.render_error('Administrator password has already been set.')
  else:
    a.save_password(new_password)
    # TODO: There should be some shared setup_state code to handle this.
    with open(os.path.join(common.get_etc(), 'openwireless-setup-state'),
        'w') as f:
      f.write('setup-private-net')
    print "Content-Type: application/json"
    print a.login_headers()
    print
    print "{}"

jsonrpc_change_password_first_time()
