#!/usr/bin/python
import time, json, sys, common, os, uci
from subprocess import check_output

def jsonrpc_set_private_ssid():
  data = json.loads(sys.stdin.read())
  try:
    (name, passphrase) = data["params"]
  except KeyError, e:
    common.render_error(e.__str__())
  except ValueError, e:
    common.render_error(e.__str__())

  # TODO: filter input
  uci.set("wireless.@wifi-iface[0].ssid=" + name)
  uci.set("wireless.@wifi-iface[0].key=" + passphrase)
  uci.set("wireless.@wifi-iface[0].encryption=psk2")
  uci.commit("wireless")
  # Run the reload command in a separate process after we've
  # returned data to the browser.
  if os.fork():
    time.sleep(0.1)
    check_output(["/sbin/wifi", "reload"]).strip()
  else:
    common.render_success({"ssid": name})
  # TODO: There should be some shared setup_state code to handle this.
  with open('/etc/openwireless-setup-state', 'w') as f:
    f.write('complete')

jsonrpc_set_private_ssid()
